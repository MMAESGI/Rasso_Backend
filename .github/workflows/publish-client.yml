name: Generate & Publish TS Client

on:
  workflow_call:
    inputs:
      client-path:
        required: true
        type: string

jobs:
  generate-client:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.client-path }}

    outputs:
      has-changes: ${{ steps.check_changes.outputs.changed }}
      version: ${{ steps.extract_version.outputs.version }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 9.0.x

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install NSwag CLI
        run: dotnet tool install --global NSwag.ConsoleCore

      - name: Add dotnet tools to PATH
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Run NSwag to regenerate client
        run: nswag run ts-nswag.json

      - name: Check if files changed
        id: check_changes
        run: |
          if git diff --quiet; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Extract version from package.json
        id: extract_version
        run: |
          version=$(jq -r '.version' package.json)
          echo "version=$version" >> $GITHUB_OUTPUT

  publish-client:
    needs: generate-client
    if: needs.generate-client.outputs.has-changes == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.client-path }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: https://npm.pkg.github.com/

      - name: Install dependencies
        run: npm install

      - name: Build client
        run: npm run build

      - name: Publish to GitHub Packages
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

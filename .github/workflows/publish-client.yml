name: Generate & Publish TS Client

on:
  workflow_call:
    inputs:
      client-path:
        required: true
        type: string
      package-name:
        required: true
        type: string

jobs:
  generate-client:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.client-path }}

    outputs:
      version: ${{ steps.extract_version.outputs.version }}
      publish-needed: ${{ steps.version_check.outputs.publish_needed }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 9.0.x

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install NSwag CLI
        run: dotnet tool install --global NSwag.ConsoleCore

      - name: Add dotnet tools to PATH
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Run NSwag to regenerate client
        run: nswag run ts-nswag.json

      - name: Extract version from package.json
        id: extract_version
        run: |
          version=$(jq -r '.version' package.json)
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Check if version already published
        id: version_check
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PACKAGE_NAME="${{ inputs.package-name }}"
          published_version=$(npm view "$PACKAGE_NAME" version --registry=https://npm.pkg.github.com/ 2>/dev/null || echo "none")
          local_version=$(jq -r '.version' package.json)

          echo "Local version: $local_version"
          echo "Published version: $published_version"

          if [ "$local_version" = "$published_version" ]; then
            echo "publish_needed=false" >> $GITHUB_OUTPUT
          else
            echo "publish_needed=true" >> $GITHUB_OUTPUT
          fi

  publish-client:
    needs: generate-client
    if: needs.generate-client.outputs.publish-needed == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.client-path }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: https://npm.pkg.github.com/

      - name: Install dependencies
        run: npm install

      - name: Build client
        run: npm run build

      - name: Publish to GitHub Packages
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

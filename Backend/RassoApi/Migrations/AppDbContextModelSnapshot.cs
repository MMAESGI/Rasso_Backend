// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RassoApi.Database;

#nullable disable

namespace RassoApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("RassoApi.Models.EventModels.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("category");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<double?>("Latitude")
                        .HasColumnType("double")
                        .HasColumnName("latitude");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("location");

                    b.Property<double?>("Longitude")
                        .HasColumnType("double")
                        .HasColumnName("longitude");

                    b.Property<DateTime?>("ModeratedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("moderated_at");

                    b.Property<Guid?>("ModeratedByUserId")
                        .HasColumnType("char(36)")
                        .HasColumnName("moderated_by_id");

                    b.Property<Guid>("OrganizerId")
                        .HasColumnType("char(36)")
                        .HasColumnName("organizer_id");

                    b.Property<string>("RefusalComment")
                        .HasColumnType("longtext")
                        .HasColumnName("refusal_comment");

                    b.Property<int?>("RefusalReasonId")
                        .HasColumnType("int")
                        .HasColumnName("refusal_reason_id");

                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("RefusalReasonId");

                    b.HasIndex("StatusId");

                    b.ToTable("events", (string)null);
                });

            modelBuilder.Entity("RassoApi.Models.EventModels.EventMedia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<Guid>("EventId")
                        .HasColumnType("char(36)")
                        .HasColumnName("event_id");

                    b.Property<string>("Filename")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("filename");

                    b.Property<string>("S3Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("s3_url");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("uploaded_at");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("event_media", (string)null);
                });

            modelBuilder.Entity("RassoApi.Models.EventModels.EventParticipant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<Guid>("EventId")
                        .HasColumnType("char(36)")
                        .HasColumnName("event_id");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("registered_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("event_participants", (string)null);
                });

            modelBuilder.Entity("RassoApi.Models.EventModels.EventStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("int")
                        .HasColumnName("code");

                    b.HasKey("Id");

                    b.ToTable("event_statuses", (string)null);
                });

            modelBuilder.Entity("RassoApi.Models.Favorite", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)")
                        .HasColumnName("user_id");

                    b.Property<Guid>("EventId")
                        .HasColumnType("char(36)")
                        .HasColumnName("event_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.HasKey("UserId", "EventId");

                    b.HasIndex("EventId");

                    b.ToTable("favorites", (string)null);
                });

            modelBuilder.Entity("RassoApi.Models.RefusalReason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("label");

                    b.HasKey("Id");

                    b.ToTable("refusal_reasons", (string)null);
                });

            modelBuilder.Entity("RassoApi.Models.EventModels.Event", b =>
                {
                    b.HasOne("RassoApi.Models.RefusalReason", "RefusalReason")
                        .WithMany()
                        .HasForeignKey("RefusalReasonId");

                    b.HasOne("RassoApi.Models.EventModels.EventStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RefusalReason");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("RassoApi.Models.EventModels.EventMedia", b =>
                {
                    b.HasOne("RassoApi.Models.EventModels.Event", "Event")
                        .WithMany("Images")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("RassoApi.Models.EventModels.EventParticipant", b =>
                {
                    b.HasOne("RassoApi.Models.EventModels.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("RassoApi.Models.Favorite", b =>
                {
                    b.HasOne("RassoApi.Models.EventModels.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("RassoApi.Models.EventModels.Event", b =>
                {
                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
